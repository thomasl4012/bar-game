{"version":3,"sources":["components/form/form.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Form","handleChange","handleSubmit","gameState","value","onSubmit","className","onChange","type","App","useState","state","setstate","counter","setCounter","romanCounter","setromanCounter","setGameState","romanize","num","isNaN","NaN","digits","String","split","key","roman","i","pop","Array","join","e","preventDefault","target","length","removedItem","slice","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0OAGaA,EAAO,SAAC,GAAsD,IAApDC,EAAmD,EAAnDA,aAAcC,EAAqC,EAArCA,aAAcC,EAAuB,EAAvBA,UAAWC,EAAY,EAAZA,MAC5D,OACE,8BACE,sBAAMC,SAAUH,EAAhB,SACE,sBAAKI,UAAU,WAAf,UACE,qBAAKA,UAAU,UAAf,SACE,uBACEA,UAAU,eACVC,SAAUN,EACVG,MAAOA,EACPI,KAAK,WAGT,qBAAKF,UAAU,UAAf,SACGH,EACC,wBAAQG,UAAU,kBAAkBE,KAAK,SAAzC,mBAIA,qDC8DCC,MAjFf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNC,EADM,KACCC,EADD,OAEiBF,mBAAS,GAF1B,mBAENG,EAFM,KAEGC,EAFH,OAG2BJ,mBAAS,KAHpC,mBAGNK,EAHM,KAGQC,EAHR,OAIqBN,oBAAS,GAJ9B,mBAINP,EAJM,KAIKc,EAJL,KA2BPC,EAAW,SAACC,GAChB,GAAIC,MAAMD,GAAM,OAAOE,IAoCvB,IAnCA,IAAIC,EAASC,QAAQJ,GAAKK,MAAM,IAC9BC,EAAM,CACJ,GACA,IACA,KACA,MACA,KACA,IACA,KACA,MACA,OACA,KACA,GACA,IACA,KACA,MACA,KACA,IACA,KACA,MACA,OACA,KACA,GACA,IACA,KACA,MACA,KACA,IACA,KACA,MACA,OACA,MAEFC,EAAQ,GACRC,EAAI,EACCA,KAAKD,GAASD,GAAKH,EAAOM,MAAY,GAAJD,IAAW,IAAMD,EAC1D,OAAOG,OAAOP,EAAOQ,KAAK,IAAM,GAAGA,KAAK,KAAOJ,GAGjD,OACE,sBAAKpB,UAAU,MAAf,UACE,wDACA,cAAC,EAAD,CACEL,aAnEe,SAAC8B,GACpBA,EAAEC,iBACF,IAAM5B,EAAQ2B,EAAEE,OAAO7B,MACvBQ,EAASR,IAiELF,aA9De,SAAC6B,GAGpB,GAFAA,EAAEC,iBACFpB,EAAS,IACLG,EAAamB,OAAS,EAAG,CAC3B,IAAIC,EAAcpB,EAAaqB,MAAM,GACrCpB,EAAgBmB,QAEhBrB,EAAWD,EAAU,GACrBG,EAAgBE,EAASL,EAAU,GAAGW,MAAM,KAG1Cb,IAAUI,EAAa,IACzBE,GAAa,IAmDXd,UAAWA,EACXC,MAAOO,QClEA0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e5db49b5.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./form.style.css\";\n\nexport const Form = ({ handleChange, handleSubmit, gameState, value }) => {\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <div className=\"form-row\">\n          <div className=\"col m-2\">\n            <input\n              className=\"form-control\"\n              onChange={handleChange}\n              value={value}\n              type=\"text\"\n            ></input>\n          </div>\n          <div className=\"col m-2\">\n            {gameState ? (\n              <button className=\"btn btn-primary\" type=\"submit\">\n                check\n              </button>\n            ) : (\n              <p>you loose </p>\n            )}\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n};\n","import \"./App.css\";\nimport { Form } from \"./components/form/form.component\";\nimport { useState } from \"react\";\nfunction App() {\n  const [state, setstate] = useState(\"\");\n  const [counter, setCounter] = useState(1);\n  const [romanCounter, setromanCounter] = useState(\"I\");\n  const [gameState, setGameState] = useState(true);\n  const handleChange = (e) => {\n    e.preventDefault();\n    const value = e.target.value;\n    setstate(value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setstate(\"\");\n    if (romanCounter.length > 1) {\n      let removedItem = romanCounter.slice(1);\n      setromanCounter(removedItem);\n    } else {\n      setCounter(counter + 1);\n      setromanCounter(romanize(counter + 1).split(\"\"));\n    }\n\n    if (state !== romanCounter[0]) {\n      setGameState(false);\n    }\n  };\n\n  const romanize = (num) => {\n    if (isNaN(num)) return NaN;\n    var digits = String(+num).split(\"\"),\n      key = [\n        \"\",\n        \"C\",\n        \"CC\",\n        \"CCC\",\n        \"CD\",\n        \"D\",\n        \"DC\",\n        \"DCC\",\n        \"DCCC\",\n        \"CM\",\n        \"\",\n        \"X\",\n        \"XX\",\n        \"XXX\",\n        \"XL\",\n        \"L\",\n        \"LX\",\n        \"LXX\",\n        \"LXXX\",\n        \"XC\",\n        \"\",\n        \"I\",\n        \"II\",\n        \"III\",\n        \"IV\",\n        \"V\",\n        \"VI\",\n        \"VII\",\n        \"VIII\",\n        \"IX\",\n      ],\n      roman = \"\",\n      i = 3;\n    while (i--) roman = (key[+digits.pop() + i * 10] || \"\") + roman;\n    return Array(+digits.join(\"\") + 1).join(\"M\") + roman;\n  };\n\n  return (\n    <div className=\"App\">\n      <div>What's next element ?</div>\n      <Form\n        handleChange={handleChange}\n        handleSubmit={handleSubmit}\n        gameState={gameState}\n        value={state}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}